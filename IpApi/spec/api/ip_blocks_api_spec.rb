=begin
#IP Addresses API

#Public IP blocks are a set of contiguous IPs that allow you to access your servers or networks from the internet. Use the IP Addresses API to request and delete IP blocks.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/public-ip-management#bmc-public-ip-allocations-api' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/ips/v1/)</b> 

The version of the OpenAPI document: 1.0
Contact: support@phoenixnap.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for IpApi::IPBlocksApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'IPBlocksApi' do
  before do
    # run before each test
    @api_instance = IpApi::IPBlocksApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of IPBlocksApi' do
    it 'should create an instance of IPBlocksApi' do
      expect(@api_instance).to be_instance_of(IpApi::IPBlocksApi)
    end
  end

  # unit tests for ip_blocks_get
  # List IP Blocks.
  # List all IP Blocks.
  # @param [Hash] opts the optional parameters
  # @option opts [Array<String>] :tag List of tags, in the form tagName.tagValue, to filter by.
  # @return [Array<IpBlock>]
  describe 'ip_blocks_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for ip_blocks_ip_block_id_delete
  # Delete IP Block.
  # Delete an IP Block. An IP Block can only be deleted if not assigned to any resource.
  # @param ip_block_id The IP Block identifier.
  # @param [Hash] opts the optional parameters
  # @return [DeleteIpBlockResult]
  describe 'ip_blocks_ip_block_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for ip_blocks_ip_block_id_get
  # Get IP Block.
  # Get IP Block.
  # @param ip_block_id The IP Block identifier.
  # @param [Hash] opts the optional parameters
  # @return [IpBlock]
  describe 'ip_blocks_ip_block_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for ip_blocks_ip_block_id_patch
  # Update IP block.
  # Update IP Block&#39;s details.
  # @param ip_block_id The IP Block identifier.
  # @param ip_block_patch 
  # @param [Hash] opts the optional parameters
  # @return [IpBlock]
  describe 'ip_blocks_ip_block_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for ip_blocks_ip_block_id_tags_put
  # Overwrite tags assigned for IP Block.
  # Overwrites tags assigned for IP Block and unassigns any tags not part of the request.
  # @param ip_block_id The IP Block identifier.
  # @param tag_assignment_request 
  # @param [Hash] opts the optional parameters
  # @return [IpBlock]
  describe 'ip_blocks_ip_block_id_tags_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for ip_blocks_post
  # Create an IP Block.
  # Request an IP Block. An IP Block is a set of contiguous IPs that can be assigned to other resources such as servers.
  # @param ip_block_create 
  # @param [Hash] opts the optional parameters
  # @return [IpBlock]
  describe 'ip_blocks_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
