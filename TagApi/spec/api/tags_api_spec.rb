=begin
#Tags API

#Tags are case-sensitive key-value pairs that simplify resource management. The Tag Manager API allows you to create and manage such tags to later assign them to related resources in your Bare Metal Cloud (through the respective resource apis) in order to group and categorize them.<br> <br> <span class='pnap-api-knowledge-base-link'> Knowledge base articles to help you can be found <a href='https://phoenixnap.com/kb/bmc-server-management-via-api#server-tag-manager-api' target='_blank'>here</a> </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/tag-manager/v1/)</b> 

The version of the OpenAPI document: 1.0
Contact: support@phoenixnap.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for TagApi::TagsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'TagsApi' do
  before do
    # run before each test
    @api_instance = TagApi::TagsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of TagsApi' do
    it 'should create an instance of TagsApi' do
      expect(@api_instance).to be_instance_of(TagApi::TagsApi)
    end
  end

  # unit tests for tags_get
  # List tags.
  # Retrieve all tags belonging to the BMC Account.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name Query a tag by its name.
  # @return [Array<Tag>]
  describe 'tags_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tags_post
  # Create a Tag.
  # Create a tag with the provided information.
  # @param tag_create The body containing the tag details.
  # @param [Hash] opts the optional parameters
  # @return [Tag]
  describe 'tags_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tags_tag_id_delete
  # Delete a Tag.
  # Delete the tag with the given ID.
  # @param tag_id The tag&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [DeleteResult]
  describe 'tags_tag_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tags_tag_id_get
  # Get a Tag.
  # Retrieve the tag with the given ID
  # @param tag_id The tag&#39;s ID.
  # @param [Hash] opts the optional parameters
  # @return [Tag]
  describe 'tags_tag_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for tags_tag_id_patch
  # Modify a Tag.
  # Updates the tag with the given ID.
  # @param tag_id The tag&#39;s ID.
  # @param tag_update The body containing the tag changes.
  # @param [Hash] opts the optional parameters
  # @return [Tag]
  describe 'tags_tag_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
