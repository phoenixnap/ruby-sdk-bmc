=begin
#Networks API

#Create, list, edit and delete public/private networks with the Network API. Use public networks to place multiple  servers on the same network or VLAN. Assign new servers with IP addresses from the same CIDR range. Use private  networks to avoid unnecessary egress data charges. Model your networks according to your business needs.<br> <br> <span class='pnap-api-knowledge-base-link'> Helpful knowledge base articles are available for  <a href='https://phoenixnap.com/kb/bmc-server-management-via-api#multi-private-backend-network-api' target='_blank'>multi-private backend networks</a>,  <a href='https://phoenixnap.com/kb/bmc-server-management-via-api#ftoc-heading-15' target='_blank'>public networks</a> and <a href='https://phoenixnap.com/kb/border-gateway-protocol-bmc' target='_blank'>border gateway protocol peer groups</a>. </span><br> <br> <b>All URLs are relative to (https://api.phoenixnap.com/networks/v1/)</b> 

The version of the OpenAPI document: 1.0
Contact: support@phoenixnap.com
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.2.0

=end

require 'spec_helper'
require 'json'

# Unit tests for NetworkApi::BGPPeerGroupsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'BGPPeerGroupsApi' do
  before do
    # run before each test
    @api_instance = NetworkApi::BGPPeerGroupsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of BGPPeerGroupsApi' do
    it 'should create an instance of BGPPeerGroupsApi' do
      expect(@api_instance).to be_instance_of(NetworkApi::BGPPeerGroupsApi)
    end
  end

  # unit tests for bgp_peer_groups_get
  # List BGP Peer Groups.
  # List all BGP Peer Groups owned by account.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :location If present will filter the result by the given location of the BGP Peer Group.
  # @return [Array<BgpPeerGroup>]
  describe 'bgp_peer_groups_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for bgp_peer_groups_peer_group_id_delete
  # Delete a BGP Peer Group.
  # Deletes BGP Peer Group by ID.
  # @param bgp_peer_group_id The BGP peer group ID.
  # @param [Hash] opts the optional parameters
  # @return [BgpPeerGroup]
  describe 'bgp_peer_groups_peer_group_id_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for bgp_peer_groups_peer_group_id_get
  # Get a BGP Peer Group.
  # Retrieves BGP Peer Group by ID.
  # @param bgp_peer_group_id The BGP peer group ID.
  # @param [Hash] opts the optional parameters
  # @return [BgpPeerGroup]
  describe 'bgp_peer_groups_peer_group_id_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for bgp_peer_groups_peer_group_id_patch
  # Modify a BGP Peer Group.
  # Modifies BGP Peer Group by ID.
  # @param bgp_peer_group_id The BGP peer group ID.
  # @param bgp_peer_group_patch 
  # @param [Hash] opts the optional parameters
  # @return [BgpPeerGroup]
  describe 'bgp_peer_groups_peer_group_id_patch test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for bgp_peer_groups_post
  # Create a BGP Peer Group.
  # Create a BGP Peer Group.
  # @param bgp_peer_group_create 
  # @param [Hash] opts the optional parameters
  # @return [BgpPeerGroup]
  describe 'bgp_peer_groups_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
