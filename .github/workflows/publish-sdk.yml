name: publish-sdk

on:
  release:
    types: [published]

env:
  GEM_HOST_API_KEY: ${{ secrets.RUBYGEMS_API_KEY }}

jobs:
  # Build stage
  build-bmcapi:
    name: Build BMC API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: BmcApi
  build-rancherapi:
    name: Build Rancher API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: RancherApi
  build-networkapi:
    name: Build Network API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: NetworkApi
  build-ipapi:
    name: Build IP API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: IpApi
  build-auditapi:
    name: Build Audit API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: AuditApi
  build-tagapi:
    name: Build Tag API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: TagApi
  build-networkstorageapi:
    name: Build Network Storage API
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/build-sdk
        with:
          module-name: NetworkStorageApi

  # Lint stage
  lint-bmcapi:
    name: Lint BMC API
    runs-on: ubuntu-latest
    needs:
      - build-bmcapi
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: BmcApi
  lint-rancherapi:
    name: Lint Rancher API
    runs-on: ubuntu-latest
    needs:
      - build-rancherapi
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: RancherApi
  lint-networkapi:
    name: Lint Network API
    runs-on: ubuntu-latest
    needs:
      - build-networkapi
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: NetworkApi
  lint-ipapi:
    name: Lint IP API
    runs-on: ubuntu-latest
    needs:
      - build-ipapi
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: IpApi
  lint-auditapi:
    name: Lint Audit API
    runs-on: ubuntu-latest
    needs:
      - build-auditapi
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: AuditApi
  lint-tagapi:
    name: Lint Tag API
    runs-on: ubuntu-latest
    needs:
      - build-tagapi
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: TagApi
  lint-networkstorageapi:
    name: Lint Network Storage API
    runs-on: ubuntu-latest
    needs:
      - build-networkstorageapi
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/lint-sdk
        with:
          module-name: NetworkStorageApi

  # Test stage
  test-bmcapi:
    name: Test Bmc API
    runs-on: ubuntu-latest
    needs:
      - lint-bmcapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ '2.6', '3.1' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-file: tc_bmc_api.rb
          test-report-dir: tests
          ruby-version: ${{ matrix.ruby-version }}
  test-rancherapi:
    name: Test Rancher API
    runs-on: ubuntu-latest
    needs:
      - lint-rancherapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ '2.6', '3.1' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-file: tc_rancher_api.rb
          test-report-dir: tests
          ruby-version: ${{ matrix.ruby-version }}
  test-networkapi:
    name: Test Network API
    runs-on: ubuntu-latest
    needs:
      - lint-networkapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ '2.6', '3.1' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-file: tc_network_api.rb   
          test-report-dir: tests   
          ruby-version: ${{ matrix.ruby-version }}
  test-ipapi:
    name: Test Ip API
    runs-on: ubuntu-latest
    needs:
      - lint-ipapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ '2.6', '3.1' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-file: tc_ip_api.rb
          test-report-dir: tests
          ruby-version: ${{ matrix.ruby-version }}
  test-auditapi:
    name: Test Audit API
    runs-on: ubuntu-latest
    needs:
      - lint-auditapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ '2.6', '3.1' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-file: tc_audit_api.rb
          test-report-dir: tests
          ruby-version: ${{ matrix.ruby-version }}
  test-tagapi:
    name: Test Tag API
    runs-on: ubuntu-latest
    needs:
      - lint-tagapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ '2.6', '3.1' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-file: tc_tag_api.rb
          test-report-dir: tests
          ruby-version: ${{ matrix.ruby-version }}
  test-networkstorageapi:
    name: Test Network Storage API
    runs-on: ubuntu-latest
    needs:
      - lint-networkstorageapi
    services:
      mockserver:
        image: mockserver/mockserver:5.13.0
        ports:
          - 1080:1080
    strategy:
      fail-fast: false
      matrix:
        ruby-version: [ '2.6', '3.1' ]
    steps:
      - uses: actions/checkout@v3
      - uses: ./.github/workflows/composite/test-sdk
        with:
          test-file: tc_networkstorage_api.rb
          test-report-dir: tests
          ruby-version: ${{ matrix.ruby-version }}

  process-tag-info:
    name: Process information in Tag name
    runs-on: ubuntu-latest
    needs:
      - test-bmcapi
      - test-rancherapi
      - test-networkapi
      - test-ipapi
      - test-auditapi
      - test-tagapi
      - test-networkstorageapi
    outputs:
      module: ${{ steps.step1.outputs.module }}
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - name: Determining release type
        id: step1
        run: |
          TAG=${{ github.ref }}
          IFS='/' read -r -a array <<< "${TAG#refs/*/}"

          if [ "${#array[@]}" -eq "2" ]; then
              MODULE=${array[0]}
              VERSION=${array[1]}

              echo Verifying version is actually v$VERSION...
              if [ "$VERSION" != "v$(cat ./$MODULE/VERSION)" ]; then
                  echo Version "in" tag \($VERSION\) does not match module version \($(cat ./$MODULE/VERSION)\)
                  exit 1
              fi 

              echo Is submodule release. Publishing $MODULE v$VERSION to registry.
              echo "::set-output name=module::$MODULE"
          else
              echo Is main release. Skipping.
          fi
  
  publish-ruby-gems:
    name: Publish to RubyGems
    if: needs.process-tag-info.outputs.module != 0
    runs-on: ubuntu-latest
    needs: process-tag-info
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}
      - run: |
          echo Entering ${{ needs.process-tag-info.outputs.module }}...
          cd ./${{ needs.process-tag-info.outputs.module }}

          echo Building...
          gem build *.gemspec

          echo Publishing...
          gem push *.gem
