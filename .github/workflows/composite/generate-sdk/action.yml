name: 'Generate SDK'
description: 'Generate SDK for a given API'
inputs:
  spec-link: 
    description: 'Link to the spec file.'
    required: true
  module-name:
    description: 'Name of the ruby module.'
    required: true
  gem-name:
    description: 'Name of the ruby gem.'
runs:
  using: "composite"
  steps:
    - name: Logging head_ref and ref_name
      shell: bash
      run: |
        echo "head_ref = ${{github.head_ref}}"
        echo "ref_name = ${{github.ref_name}}"
    - name: Check if Release Branch
      shell: bash
      if: |
        # For PRs
        startsWith(github.head_ref, 'hotfix') == false && startsWith(github.head_ref, 'release') == false && github.head_ref != 'master' &&
        # For Branches
        startsWith(github.ref_name, 'hotfix') == false && startsWith(github.ref_name, 'release') == false && github.ref_name != 'master'
      id: checkReleaseBranch
      run: |
        echo "Ref isn't a PR from (master / release... / hotfix...) or a branch with name (master / release... / hotfix...) - Continuing with generation."
        echo "::set-output name=IS_FEATURE_BRANCH::true"
    - name: Install node
      if: ${{ steps.checkReleaseBranch.outputs.IS_FEATURE_BRANCH }}
      uses: actions/setup-node@v2
    - name: Install openapi-generator-cli
      if: ${{ steps.checkReleaseBranch.outputs.IS_FEATURE_BRANCH }}
      shell: bash
      run: npm install -g @openapitools/openapi-generator-cli
    - name: Generate SDK
      if: ${{ steps.checkReleaseBranch.outputs.IS_FEATURE_BRANCH }}
      shell: bash
      run: openapi-generator-cli generate -i ${{ inputs.spec-link }} -c openapi-generator-config.yaml -o ${{ inputs.module-name }} --additional-properties moduleName=${{ inputs.module-name }} --additional-properties gemName=${{ inputs.gem-name }}
    - name: Download spec files
      if: ${{ steps.checkReleaseBranch.outputs.IS_FEATURE_BRANCH }}
      shell: bash
      run: wget ${{ inputs.spec-link }} -O ./${{ inputs.module-name }}/${{ inputs.module-name }}.spec.yaml
    - name: Upload Artifacts
      if: ${{ steps.checkReleaseBranch.outputs.IS_FEATURE_BRANCH }}
      uses: actions/upload-artifact@v2
      with:
        name: ${{ inputs.module-name }}
        path: ${{ inputs.module-name }}
